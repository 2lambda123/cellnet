// Generated by github.com/davyxu/protoplus
// DO NOT EDIT!
package relay

import (
	"github.com/davyxu/protoplus/proto"
	"github.com/davyxu/protoplus/wire"
	"unsafe"
	"reflect"
	"github.com/davyxu/cellnet"
	"github.com/davyxu/cellnet/codec"
)

var (
	_ *wire.Buffer
	_ = proto.Marshal
	_ unsafe.Pointer
	_ cellnet.MessageMeta
	_ codec.CodecRecycler
	_ reflect.Kind
)

type RelayACK struct {
	Msg        []byte  // 数据消息转换后传输bytes
	MsgID      uint32  // 消息ID
	Bytes      []byte  // 数据bytes
	Int64      int64   // 透传int64
	Int64Slice []int64 // 透传int64切片
	Str        string
}

func (self *RelayACK) String() string { return proto.CompactTextString(self) }

func (self *RelayACK) Size() (ret int) {

	ret += wire.SizeBytes(1, self.Msg)

	ret += wire.SizeUInt32(2, self.MsgID)

	ret += wire.SizeBytes(3, self.Bytes)

	ret += wire.SizeInt64(4, self.Int64)

	ret += wire.SizeInt64Slice(5, self.Int64Slice)

	ret += wire.SizeString(6, self.Str)

	return
}

func (self *RelayACK) Marshal(buffer *wire.Buffer) error {

	wire.MarshalBytes(buffer, 1, self.Msg)

	wire.MarshalUInt32(buffer, 2, self.MsgID)

	wire.MarshalBytes(buffer, 3, self.Bytes)

	wire.MarshalInt64(buffer, 4, self.Int64)

	wire.MarshalInt64Slice(buffer, 5, self.Int64Slice)

	wire.MarshalString(buffer, 6, self.Str)

	return nil
}

func (self *RelayACK) Unmarshal(buffer *wire.Buffer, fieldIndex uint64, wt wire.WireType) error {
	switch fieldIndex {
	case 1:
		v, err := wire.UnmarshalBytes(buffer, wt)
		self.Msg = v
		return err
	case 2:
		v, err := wire.UnmarshalUInt32(buffer, wt)
		self.MsgID = v
		return err
	case 3:
		v, err := wire.UnmarshalBytes(buffer, wt)
		self.Bytes = v
		return err
	case 4:
		v, err := wire.UnmarshalInt64(buffer, wt)
		self.Int64 = v
		return err
	case 5:
		v, err := wire.UnmarshalInt64Slice(buffer, wt)
		self.Int64Slice = append(self.Int64Slice, v...)
		return err
	case 6:
		v, err := wire.UnmarshalString(buffer, wt)
		self.Str = v
		return err

	}

	return wire.ErrUnknownField
}

func init() {

	cellnet.RegisterMessageMeta(&cellnet.MessageMeta{
		Codec: codec.MustGetCodec("protoplus"),
		Type:  reflect.TypeOf((*RelayACK)(nil)).Elem(),
		ID:    45545,
		New:   func() interface{} { return &RelayACK{} },
	})

}
