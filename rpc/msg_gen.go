// Generated by github.com/davyxu/protoplus
// DO NOT EDIT!
package rpc

import (
	"github.com/davyxu/protoplus/proto"
	"unsafe"
	"reflect"
	"github.com/davyxu/cellnet"
	"github.com/davyxu/cellnet/codec"
)

var (
	_ *proto.Buffer
	_ unsafe.Pointer
	_ cellnet.MessageMeta
	_ codec.CodecRecycler
	_ reflect.Kind
)

type RemoteCallREQ struct {
	MsgID  uint32
	Data   []byte
	CallID int64
}

func (self *RemoteCallREQ) String() string { return proto.CompactTextString(self) }

func (self *RemoteCallREQ) Size() (ret int) {

	ret += proto.SizeUInt32(1, self.MsgID)

	ret += proto.SizeBytes(2, self.Data)

	ret += proto.SizeInt64(3, self.CallID)

	return
}

func (self *RemoteCallREQ) Marshal(buffer *proto.Buffer) error {

	proto.MarshalUInt32(buffer, 1, self.MsgID)

	proto.MarshalBytes(buffer, 2, self.Data)

	proto.MarshalInt64(buffer, 3, self.CallID)

	return nil
}

func (self *RemoteCallREQ) Unmarshal(buffer *proto.Buffer, fieldIndex uint64, wt proto.WireType) error {
	switch fieldIndex {
	case 1:
		v, err := proto.UnmarshalUInt32(buffer, wt)
		self.MsgID = v
		return err
	case 2:
		v, err := proto.UnmarshalBytes(buffer, wt)
		self.Data = v
		return err
	case 3:
		v, err := proto.UnmarshalInt64(buffer, wt)
		self.CallID = v
		return err

	}

	return proto.ErrUnknownField
}

type RemoteCallACK struct {
	MsgID  uint32
	Data   []byte
	CallID int64
}

func (self *RemoteCallACK) String() string { return proto.CompactTextString(self) }

func (self *RemoteCallACK) Size() (ret int) {

	ret += proto.SizeUInt32(1, self.MsgID)

	ret += proto.SizeBytes(2, self.Data)

	ret += proto.SizeInt64(3, self.CallID)

	return
}

func (self *RemoteCallACK) Marshal(buffer *proto.Buffer) error {

	proto.MarshalUInt32(buffer, 1, self.MsgID)

	proto.MarshalBytes(buffer, 2, self.Data)

	proto.MarshalInt64(buffer, 3, self.CallID)

	return nil
}

func (self *RemoteCallACK) Unmarshal(buffer *proto.Buffer, fieldIndex uint64, wt proto.WireType) error {
	switch fieldIndex {
	case 1:
		v, err := proto.UnmarshalUInt32(buffer, wt)
		self.MsgID = v
		return err
	case 2:
		v, err := proto.UnmarshalBytes(buffer, wt)
		self.Data = v
		return err
	case 3:
		v, err := proto.UnmarshalInt64(buffer, wt)
		self.CallID = v
		return err

	}

	return proto.ErrUnknownField
}

func init() {

	cellnet.RegisterMessageMeta(&cellnet.MessageMeta{
		Codec: codec.MustGetCodec("protoplus"),
		Type:  reflect.TypeOf((*RemoteCallREQ)(nil)).Elem(),
		ID:    58645,
	})
	cellnet.RegisterMessageMeta(&cellnet.MessageMeta{
		Codec: codec.MustGetCodec("protoplus"),
		Type:  reflect.TypeOf((*RemoteCallACK)(nil)).Elem(),
		ID:    20476,
	})

}
